import { MigrationInterface, QueryRunner } from "typeorm";

export class CreateWatchHistory1739514435636 implements MigrationInterface {
    name = 'CreateWatchHistory1739514435636'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "FK_REVIEWS_USER"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "FK_REVIEWS_MOVIE"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "FK_reviews_movie_id"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT "FK_reports_review"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT "FK_reports_reporter"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT "FK_reports_moderator"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP CONSTRAINT "fk_list_items_list"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP CONSTRAINT "fk_list_items_added_by"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP CONSTRAINT "fk_list_collaborators_list"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP CONSTRAINT "fk_list_collaborators_user"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP CONSTRAINT "fk_list_collaborators_added_by"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP CONSTRAINT "fk_lists_owner"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" DROP CONSTRAINT "fk_list_favorites_list"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" DROP CONSTRAINT "fk_list_favorites_user"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP CONSTRAINT "FK_moderation_logs_moderator"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP CONSTRAINT "FK_moderation_logs_target_user"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP CONSTRAINT "FK_moderation_logs_target_review"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_REVIEWS_USER_MOVIE"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_reviews_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_reviews_moderated_at"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_reviews_helpful_votes"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_reviews_movie_id"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_USERS_FIREBASE_UID"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_warning_count"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_suspended_until"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_users_is_banned"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_reports_reporter"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_reports_status"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_reports_created_at"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_reports_review"`);
        await queryRunner.query(`DROP INDEX "public"."idx_list_items_list_created"`);
        await queryRunner.query(`DROP INDEX "public"."idx_list_collaborators_list_user"`);
        await queryRunner.query(`DROP INDEX "public"."idx_lists_owner_type"`);
        await queryRunner.query(`DROP INDEX "public"."idx_lists_privacy_created"`);
        await queryRunner.query(`DROP INDEX "public"."idx_list_favorites_user_created"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_moderation_logs_action"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_moderation_logs_created_at"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_moderation_logs_is_resolved"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_moderation_logs_target_user"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_moderation_logs_target_review"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP CONSTRAINT "uq_list_items_list_movie"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP CONSTRAINT "uq_list_collaborators_list_user"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" DROP CONSTRAINT "uq_list_favorites_list_user"`);
        await queryRunner.query(`CREATE TABLE "movie" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "tmdbId" integer NOT NULL, "title" character varying NOT NULL, "originalTitle" character varying NOT NULL, "overview" text NOT NULL, "releaseYear" integer NOT NULL, "posterPath" character varying, "backdropPath" character varying, "genres" text NOT NULL, "runtime" integer, "languages" text NOT NULL, "isAdult" boolean NOT NULL, CONSTRAINT "PK_cb3bb4d61cf764dc035cbedd422" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."watch_history_watchtype_enum" AS ENUM('FIRST_TIME', 'REWATCH')`);
        await queryRunner.query(`CREATE TABLE "watch_history" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "watchedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "watchType" "public"."watch_history_watchtype_enum" NOT NULL DEFAULT 'FIRST_TIME', "rating" double precision, "notes" text, "watchDuration" integer, "isPrivate" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "user_id" uuid, "movie_id" uuid, CONSTRAINT "PK_4a7d6381618ede4bcde39b5a708" PRIMARY KEY ("id"))`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "movieId"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "flagged"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "spoiler"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "moderation_reason"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "moderated_at"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "contains_spoilers"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "helpful_votes"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "is_edited"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "suspended_until"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "suspension_reason"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "warning_count"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "last_warning_reason"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "last_warning_at"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "last_activity_at"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "is_banned"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "ban_reason"`);
        await queryRunner.query(`ALTER TABLE "users" DROP COLUMN "banned_at"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "review_id"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "reporter_id"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "moderator_id"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "moderator_notes"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "resolved_at"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP COLUMN "movie_id"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP COLUMN "max_entries"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP COLUMN "favorite_count"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP COLUMN "updated_at"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP COLUMN "created_at"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP COLUMN "is_resolved"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP COLUMN "resolved_at"`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "title" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "moderationReason" text`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "isFlagged" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "moderatedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "containsSpoilers" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "helpfulVotes" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "isEdited" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "user_id" uuid`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "reviewId" uuid`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD "listId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD "movieId" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD "addedById" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD "listId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD "userId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD "addedById" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lists" ADD "ownerId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "lists" ADD "maxEntries" integer`);
        await queryRunner.query(`ALTER TABLE "lists" ADD "favoriteCount" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "lists" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lists" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ADD "listId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ADD "userId" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "moderatorNotes" text`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "resolvedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "review_id" uuid`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "reporter_id" uuid`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "moderator_id" uuid`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD "isResolved" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD "resolvedAt" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "rating"`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "rating" integer NOT NULL`);
        await queryRunner.query(`ALTER TYPE "public"."review_status_enum" RENAME TO "review_status_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."reviews_status_enum" AS ENUM('PENDING', 'APPROVED', 'REJECTED', 'FLAGGED')`);
        await queryRunner.query(`ALTER TABLE "reviews" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "reviews" ALTER COLUMN "status" TYPE "public"."reviews_status_enum" USING "status"::"text"::"public"."reviews_status_enum"`);
        await queryRunner.query(`ALTER TABLE "reviews" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."review_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "reviews" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reviews" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TYPE "public"."user_role_enum" RENAME TO "user_role_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_roles_enum" AS ENUM('user', 'admin', 'moderator')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "roles" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "roles" TYPE "public"."users_roles_enum"[] USING "roles"::"text"::"public"."users_roles_enum"[]`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "roles" SET DEFAULT '{user}'`);
        await queryRunner.query(`DROP TYPE "public"."user_role_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."profile_visibility_enum" RENAME TO "profile_visibility_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_profilevisibility_enum" AS ENUM('public', 'private', 'followers')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "profileVisibility" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "profileVisibility" TYPE "public"."users_profilevisibility_enum" USING "profileVisibility"::"text"::"public"."users_profilevisibility_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "profileVisibility" SET DEFAULT 'public'`);
        await queryRunner.query(`DROP TYPE "public"."profile_visibility_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "socialLinks" SET NOT NULL`);
        await queryRunner.query(`ALTER TYPE "public"."watchlist_display_mode_enum" RENAME TO "watchlist_display_mode_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_watchlistdisplaymode_enum" AS ENUM('grid', 'list')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "watchlistDisplayMode" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "watchlistDisplayMode" TYPE "public"."users_watchlistdisplaymode_enum" USING "watchlistDisplayMode"::"text"::"public"."users_watchlistdisplaymode_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "watchlistDisplayMode" SET DEFAULT 'grid'`);
        await queryRunner.query(`DROP TYPE "public"."watchlist_display_mode_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."activity_feed_filter_enum" RENAME TO "activity_feed_filter_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_activityfeedfilter_enum" AS ENUM('all', 'friends', 'reviews')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "activityFeedFilter" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "activityFeedFilter" TYPE "public"."users_activityfeedfilter_enum" USING "activityFeedFilter"::"text"::"public"."users_activityfeedfilter_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "activityFeedFilter" SET DEFAULT 'all'`);
        await queryRunner.query(`DROP TYPE "public"."activity_feed_filter_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."reviews_sort_order_enum" RENAME TO "reviews_sort_order_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."users_reviewssortorder_enum" AS ENUM('latest', 'rating', 'likes')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "reviewsSortOrder" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "reviewsSortOrder" TYPE "public"."users_reviewssortorder_enum" USING "reviewsSortOrder"::"text"::"public"."users_reviewssortorder_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "reviewsSortOrder" SET DEFAULT 'latest'`);
        await queryRunner.query(`DROP TYPE "public"."reviews_sort_order_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "reason"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "reason" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."report_status_enum"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "status" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "resolution"`);
        await queryRunner.query(`DROP TYPE "public"."report_resolution_enum"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "resolution" character varying`);
        await queryRunner.query(`ALTER TABLE "list_items" ALTER COLUMN "list_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_items" ALTER COLUMN "added_by_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TYPE "public"."collaborator_permission_enum" RENAME TO "collaborator_permission_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."list_collaborators_permissions_enum" AS ENUM('view', 'add_items', 'remove_items', 'edit_details', 'invite_others')`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "permissions" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "permissions" TYPE "public"."list_collaborators_permissions_enum"[] USING "permissions"::"text"::"public"."list_collaborators_permissions_enum"[]`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "permissions" SET DEFAULT '{view}'`);
        await queryRunner.query(`DROP TYPE "public"."collaborator_permission_enum_old"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "list_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "user_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "added_by_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TYPE "public"."list_type_enum" RENAME TO "list_type_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."lists_type_enum" AS ENUM('standard', 'custom')`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "type" TYPE "public"."lists_type_enum" USING "type"::"text"::"public"."lists_type_enum"`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "type" SET DEFAULT 'custom'`);
        await queryRunner.query(`DROP TYPE "public"."list_type_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."list_privacy_enum" RENAME TO "list_privacy_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."lists_privacy_enum" AS ENUM('public', 'private', 'following')`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "privacy" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "privacy" TYPE "public"."lists_privacy_enum" USING "privacy"::"text"::"public"."lists_privacy_enum"`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "privacy" SET DEFAULT 'private'`);
        await queryRunner.query(`DROP TYPE "public"."list_privacy_enum_old"`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "owner_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ALTER COLUMN "list_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ALTER COLUMN "user_id" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "reason"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "reason" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."reports_status_enum" AS ENUM('PENDING', 'RESOLVED', 'DISMISSED')`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "status" "public"."reports_status_enum" NOT NULL DEFAULT 'PENDING'`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "resolution"`);
        await queryRunner.query(`CREATE TYPE "public"."reports_resolution_enum" AS ENUM('DELETE', 'WARNING', 'DISMISS')`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "resolution" "public"."reports_resolution_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."moderation_action_enum" RENAME TO "moderation_action_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."moderation_logs_action_enum" AS ENUM('REVIEW_APPROVED', 'REVIEW_REJECTED', 'REVIEW_FLAGGED', 'USER_WARNED', 'USER_SUSPENDED', 'USER_BANNED')`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ALTER COLUMN "action" TYPE "public"."moderation_logs_action_enum" USING "action"::"text"::"public"."moderation_logs_action_enum"`);
        await queryRunner.query(`DROP TYPE "public"."moderation_action_enum_old"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ALTER COLUMN "metadata" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ALTER COLUMN "moderator_id" DROP NOT NULL`);
        await queryRunner.query(`CREATE INDEX "IDX_bec5013f0916fb7b24ccad0350" ON "list_items" ("listId", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_0ea4ade44f698d49ccd98d46b1" ON "list_collaborators" ("listId", "userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_8bceed52a4e05a90d0fd681058" ON "lists" ("privacy", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_11df0deb9c7115715f5c15dda9" ON "lists" ("ownerId", "type") `);
        await queryRunner.query(`CREATE INDEX "IDX_f853e3be53d97af7ff3b2978c7" ON "list_favorites" ("userId", "createdAt") `);
        await queryRunner.query(`ALTER TABLE "list_items" ADD CONSTRAINT "UQ_a14257f9c656c9bfc42e781bda8" UNIQUE ("listId", "movieId")`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD CONSTRAINT "UQ_0ea4ade44f698d49ccd98d46b1f" UNIQUE ("listId", "userId")`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ADD CONSTRAINT "UQ_bfa5c8bcc0b003b0cc2908cce57" UNIQUE ("listId", "userId")`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "FK_728447781a30bc3fcfe5c2f1cdf" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "FK_563501cf3faa75a1ca40be84f82" FOREIGN KEY ("movie_id") REFERENCES "movie"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "watch_history" ADD CONSTRAINT "FK_5e1169219c2bda5624a4b65742d" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "watch_history" ADD CONSTRAINT "FK_cff7480bc2d70fc9e78f4ec6204" FOREIGN KEY ("movie_id") REFERENCES "movie"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "FK_29ae1465ecb0d282037a8739f42" FOREIGN KEY ("reviewId") REFERENCES "reviews"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD CONSTRAINT "FK_8bf07909d6d9e95e8e637bd5b3e" FOREIGN KEY ("list_id") REFERENCES "lists"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD CONSTRAINT "FK_7211225643372f045fb51e79889" FOREIGN KEY ("added_by_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD CONSTRAINT "FK_ec746a98a1b7cf4756bfb9f9999" FOREIGN KEY ("list_id") REFERENCES "lists"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD CONSTRAINT "FK_6da14a5c3917ba253e1ee9b9388" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD CONSTRAINT "FK_797731c3890c0cfa90dd00cd327" FOREIGN KEY ("added_by_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lists" ADD CONSTRAINT "FK_eb962e2db9730b4e73dfb580861" FOREIGN KEY ("owner_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ADD CONSTRAINT "FK_f895478b2d056f58e354501fe40" FOREIGN KEY ("list_id") REFERENCES "lists"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ADD CONSTRAINT "FK_39c7a06cfbc1b5e6926563601af" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "FK_628fb90b2d3a87f2bb236befa66" FOREIGN KEY ("review_id") REFERENCES "reviews"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "FK_9459b9bf907a3807ef7143d2ead" FOREIGN KEY ("reporter_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "FK_14aa567cf50dcaa93deba2b0b12" FOREIGN KEY ("moderator_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD CONSTRAINT "FK_1a3c8e38a7eb5a7bbdcd80c391a" FOREIGN KEY ("moderator_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD CONSTRAINT "FK_bbbbad2d0090191ba73683b0b84" FOREIGN KEY ("target_user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD CONSTRAINT "FK_79dbf91946c0a18c27c1c586539" FOREIGN KEY ("target_review_id") REFERENCES "reviews"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP CONSTRAINT "FK_79dbf91946c0a18c27c1c586539"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP CONSTRAINT "FK_bbbbad2d0090191ba73683b0b84"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP CONSTRAINT "FK_1a3c8e38a7eb5a7bbdcd80c391a"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT "FK_14aa567cf50dcaa93deba2b0b12"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT "FK_9459b9bf907a3807ef7143d2ead"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT "FK_628fb90b2d3a87f2bb236befa66"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" DROP CONSTRAINT "FK_39c7a06cfbc1b5e6926563601af"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" DROP CONSTRAINT "FK_f895478b2d056f58e354501fe40"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP CONSTRAINT "FK_eb962e2db9730b4e73dfb580861"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP CONSTRAINT "FK_797731c3890c0cfa90dd00cd327"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP CONSTRAINT "FK_6da14a5c3917ba253e1ee9b9388"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP CONSTRAINT "FK_ec746a98a1b7cf4756bfb9f9999"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP CONSTRAINT "FK_7211225643372f045fb51e79889"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP CONSTRAINT "FK_8bf07909d6d9e95e8e637bd5b3e"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP CONSTRAINT "FK_29ae1465ecb0d282037a8739f42"`);
        await queryRunner.query(`ALTER TABLE "watch_history" DROP CONSTRAINT "FK_cff7480bc2d70fc9e78f4ec6204"`);
        await queryRunner.query(`ALTER TABLE "watch_history" DROP CONSTRAINT "FK_5e1169219c2bda5624a4b65742d"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "FK_563501cf3faa75a1ca40be84f82"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "FK_728447781a30bc3fcfe5c2f1cdf"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" DROP CONSTRAINT "UQ_bfa5c8bcc0b003b0cc2908cce57"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP CONSTRAINT "UQ_0ea4ade44f698d49ccd98d46b1f"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP CONSTRAINT "UQ_a14257f9c656c9bfc42e781bda8"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f853e3be53d97af7ff3b2978c7"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_11df0deb9c7115715f5c15dda9"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8bceed52a4e05a90d0fd681058"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_0ea4ade44f698d49ccd98d46b1"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_bec5013f0916fb7b24ccad0350"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ALTER COLUMN "moderator_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ALTER COLUMN "metadata" SET DEFAULT '{}'`);
        await queryRunner.query(`CREATE TYPE "public"."moderation_action_enum_old" AS ENUM('REVIEW_APPROVED', 'REVIEW_REJECTED', 'REVIEW_FLAGGED', 'USER_WARNED', 'USER_SUSPENDED', 'USER_BANNED')`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ALTER COLUMN "action" TYPE "public"."moderation_action_enum_old" USING "action"::"text"::"public"."moderation_action_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."moderation_logs_action_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."moderation_action_enum_old" RENAME TO "moderation_action_enum"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "resolution"`);
        await queryRunner.query(`DROP TYPE "public"."reports_resolution_enum"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "resolution" character varying`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."reports_status_enum"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "status" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "reason"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "reason" character varying NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ALTER COLUMN "user_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ALTER COLUMN "list_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "owner_id" SET NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."list_privacy_enum_old" AS ENUM('public', 'private', 'following')`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "privacy" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "privacy" TYPE "public"."list_privacy_enum_old" USING "privacy"::"text"::"public"."list_privacy_enum_old"`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "privacy" SET DEFAULT 'private'`);
        await queryRunner.query(`DROP TYPE "public"."lists_privacy_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."list_privacy_enum_old" RENAME TO "list_privacy_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."list_type_enum_old" AS ENUM('standard', 'custom')`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "type" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "type" TYPE "public"."list_type_enum_old" USING "type"::"text"::"public"."list_type_enum_old"`);
        await queryRunner.query(`ALTER TABLE "lists" ALTER COLUMN "type" SET DEFAULT 'custom'`);
        await queryRunner.query(`DROP TYPE "public"."lists_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."list_type_enum_old" RENAME TO "list_type_enum"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "added_by_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "user_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "list_id" SET NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."collaborator_permission_enum_old" AS ENUM('view', 'add_items', 'remove_items', 'edit_details', 'invite_others')`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "permissions" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "permissions" TYPE "public"."collaborator_permission_enum_old"[] USING "permissions"::"text"::"public"."collaborator_permission_enum_old"[]`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ALTER COLUMN "permissions" SET DEFAULT '{view}'`);
        await queryRunner.query(`DROP TYPE "public"."list_collaborators_permissions_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."collaborator_permission_enum_old" RENAME TO "collaborator_permission_enum"`);
        await queryRunner.query(`ALTER TABLE "list_items" ALTER COLUMN "added_by_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "list_items" ALTER COLUMN "list_id" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "resolution"`);
        await queryRunner.query(`CREATE TYPE "public"."report_resolution_enum" AS ENUM('DELETE', 'WARNING', 'DISMISS')`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "resolution" "public"."report_resolution_enum"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."report_status_enum" AS ENUM('PENDING', 'RESOLVED', 'DISMISSED')`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "status" "public"."report_status_enum" NOT NULL DEFAULT 'PENDING'`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "reason"`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "reason" text NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "updatedAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."reviews_sort_order_enum_old" AS ENUM('latest', 'rating', 'likes')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "reviewsSortOrder" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "reviewsSortOrder" TYPE "public"."reviews_sort_order_enum_old" USING "reviewsSortOrder"::"text"::"public"."reviews_sort_order_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "reviewsSortOrder" SET DEFAULT 'latest'`);
        await queryRunner.query(`DROP TYPE "public"."users_reviewssortorder_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."reviews_sort_order_enum_old" RENAME TO "reviews_sort_order_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."activity_feed_filter_enum_old" AS ENUM('all', 'friends', 'reviews')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "activityFeedFilter" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "activityFeedFilter" TYPE "public"."activity_feed_filter_enum_old" USING "activityFeedFilter"::"text"::"public"."activity_feed_filter_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "activityFeedFilter" SET DEFAULT 'all'`);
        await queryRunner.query(`DROP TYPE "public"."users_activityfeedfilter_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."activity_feed_filter_enum_old" RENAME TO "activity_feed_filter_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."watchlist_display_mode_enum_old" AS ENUM('grid', 'list')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "watchlistDisplayMode" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "watchlistDisplayMode" TYPE "public"."watchlist_display_mode_enum_old" USING "watchlistDisplayMode"::"text"::"public"."watchlist_display_mode_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "watchlistDisplayMode" SET DEFAULT 'grid'`);
        await queryRunner.query(`DROP TYPE "public"."users_watchlistdisplaymode_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."watchlist_display_mode_enum_old" RENAME TO "watchlist_display_mode_enum"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "socialLinks" DROP NOT NULL`);
        await queryRunner.query(`CREATE TYPE "public"."profile_visibility_enum_old" AS ENUM('public', 'private', 'followers')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "profileVisibility" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "profileVisibility" TYPE "public"."profile_visibility_enum_old" USING "profileVisibility"::"text"::"public"."profile_visibility_enum_old"`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "profileVisibility" SET DEFAULT 'public'`);
        await queryRunner.query(`DROP TYPE "public"."users_profilevisibility_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."profile_visibility_enum_old" RENAME TO "profile_visibility_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."user_role_enum_old" AS ENUM('user', 'admin', 'moderator')`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "roles" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "roles" TYPE "public"."user_role_enum_old"[] USING "roles"::"text"::"public"."user_role_enum_old"[]`);
        await queryRunner.query(`ALTER TABLE "users" ALTER COLUMN "roles" SET DEFAULT '{user}'`);
        await queryRunner.query(`DROP TYPE "public"."users_roles_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."user_role_enum_old" RENAME TO "user_role_enum"`);
        await queryRunner.query(`ALTER TABLE "reviews" ALTER COLUMN "updatedAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "reviews" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`CREATE TYPE "public"."review_status_enum_old" AS ENUM('PENDING', 'APPROVED', 'REJECTED', 'FLAGGED')`);
        await queryRunner.query(`ALTER TABLE "reviews" ALTER COLUMN "status" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "reviews" ALTER COLUMN "status" TYPE "public"."review_status_enum_old" USING "status"::"text"::"public"."review_status_enum_old"`);
        await queryRunner.query(`ALTER TABLE "reviews" ALTER COLUMN "status" SET DEFAULT 'PENDING'`);
        await queryRunner.query(`DROP TYPE "public"."reviews_status_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."review_status_enum_old" RENAME TO "review_status_enum"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "rating"`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "rating" numeric(2,1) NOT NULL`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP COLUMN "resolvedAt"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP COLUMN "isResolved"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "moderator_id"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "reporter_id"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "review_id"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "resolvedAt"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "moderatorNotes"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" DROP COLUMN "listId"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP COLUMN "favoriteCount"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP COLUMN "maxEntries"`);
        await queryRunner.query(`ALTER TABLE "lists" DROP COLUMN "ownerId"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP COLUMN "addedById"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP COLUMN "userId"`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" DROP COLUMN "listId"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP COLUMN "addedById"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP COLUMN "movieId"`);
        await queryRunner.query(`ALTER TABLE "list_items" DROP COLUMN "listId"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "reviewId"`);
        await queryRunner.query(`ALTER TABLE "reports" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "user_id"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "isEdited"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "helpfulVotes"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "containsSpoilers"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "moderatedAt"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "isFlagged"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "moderationReason"`);
        await queryRunner.query(`ALTER TABLE "reviews" DROP COLUMN "title"`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD "resolved_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD "is_resolved" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lists" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lists" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "lists" ADD "favorite_count" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "lists" ADD "max_entries" integer`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD "created_at" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD "movie_id" integer NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "resolved_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "updated_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "moderator_notes" text`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "moderator_id" uuid`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "reporter_id" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reports" ADD "review_id" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "users" ADD "banned_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "users" ADD "ban_reason" text`);
        await queryRunner.query(`ALTER TABLE "users" ADD "is_banned" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "users" ADD "last_activity_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "users" ADD "last_warning_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "users" ADD "last_warning_reason" text`);
        await queryRunner.query(`ALTER TABLE "users" ADD "warning_count" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "users" ADD "suspension_reason" text`);
        await queryRunner.query(`ALTER TABLE "users" ADD "suspended_until" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "is_edited" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "helpful_votes" integer NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "contains_spoilers" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "moderated_at" TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "moderation_reason" text`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "spoiler" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "flagged" boolean NOT NULL DEFAULT false`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "movieId" uuid NOT NULL`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD "userId" uuid NOT NULL`);
        await queryRunner.query(`DROP TABLE "watch_history"`);
        await queryRunner.query(`DROP TYPE "public"."watch_history_watchtype_enum"`);
        await queryRunner.query(`DROP TABLE "movie"`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ADD CONSTRAINT "uq_list_favorites_list_user" UNIQUE ("list_id", "user_id")`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD CONSTRAINT "uq_list_collaborators_list_user" UNIQUE ("list_id", "user_id")`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD CONSTRAINT "uq_list_items_list_movie" UNIQUE ("list_id", "movie_id")`);
        await queryRunner.query(`CREATE INDEX "IDX_moderation_logs_target_review" ON "moderation_logs" ("target_review_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_moderation_logs_target_user" ON "moderation_logs" ("target_user_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_moderation_logs_is_resolved" ON "moderation_logs" ("is_resolved") `);
        await queryRunner.query(`CREATE INDEX "IDX_moderation_logs_created_at" ON "moderation_logs" ("created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_moderation_logs_action" ON "moderation_logs" ("action") `);
        await queryRunner.query(`CREATE INDEX "idx_list_favorites_user_created" ON "list_favorites" ("user_id", "created_at") `);
        await queryRunner.query(`CREATE INDEX "idx_lists_privacy_created" ON "lists" ("privacy", "created_at") `);
        await queryRunner.query(`CREATE INDEX "idx_lists_owner_type" ON "lists" ("type", "owner_id") `);
        await queryRunner.query(`CREATE INDEX "idx_list_collaborators_list_user" ON "list_collaborators" ("list_id", "user_id") `);
        await queryRunner.query(`CREATE INDEX "idx_list_items_list_created" ON "list_items" ("list_id", "created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_reports_review" ON "reports" ("review_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_reports_created_at" ON "reports" ("created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_reports_status" ON "reports" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_reports_reporter" ON "reports" ("reporter_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_is_banned" ON "users" ("is_banned") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_suspended_until" ON "users" ("suspended_until") `);
        await queryRunner.query(`CREATE INDEX "IDX_users_warning_count" ON "users" ("warning_count") `);
        await queryRunner.query(`CREATE INDEX "IDX_USERS_FIREBASE_UID" ON "users" ("firebaseUid") `);
        await queryRunner.query(`CREATE INDEX "IDX_reviews_movie_id" ON "reviews" ("movie_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_reviews_helpful_votes" ON "reviews" ("helpful_votes") `);
        await queryRunner.query(`CREATE INDEX "IDX_reviews_moderated_at" ON "reviews" ("moderated_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_reviews_status" ON "reviews" ("status") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_REVIEWS_USER_MOVIE" ON "reviews" ("userId", "movieId") `);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD CONSTRAINT "FK_moderation_logs_target_review" FOREIGN KEY ("target_review_id") REFERENCES "reviews"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD CONSTRAINT "FK_moderation_logs_target_user" FOREIGN KEY ("target_user_id") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "moderation_logs" ADD CONSTRAINT "FK_moderation_logs_moderator" FOREIGN KEY ("moderator_id") REFERENCES "users"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ADD CONSTRAINT "fk_list_favorites_user" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_favorites" ADD CONSTRAINT "fk_list_favorites_list" FOREIGN KEY ("list_id") REFERENCES "lists"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "lists" ADD CONSTRAINT "fk_lists_owner" FOREIGN KEY ("owner_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD CONSTRAINT "fk_list_collaborators_added_by" FOREIGN KEY ("added_by_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD CONSTRAINT "fk_list_collaborators_user" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_collaborators" ADD CONSTRAINT "fk_list_collaborators_list" FOREIGN KEY ("list_id") REFERENCES "lists"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD CONSTRAINT "fk_list_items_added_by" FOREIGN KEY ("added_by_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "list_items" ADD CONSTRAINT "fk_list_items_list" FOREIGN KEY ("list_id") REFERENCES "lists"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "FK_reports_moderator" FOREIGN KEY ("moderator_id") REFERENCES "users"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "FK_reports_reporter" FOREIGN KEY ("reporter_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reports" ADD CONSTRAINT "FK_reports_review" FOREIGN KEY ("review_id") REFERENCES "reviews"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "FK_reviews_movie_id" FOREIGN KEY ("movie_id") REFERENCES "movies"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "FK_REVIEWS_MOVIE" FOREIGN KEY ("movieId") REFERENCES "movies"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "FK_REVIEWS_USER" FOREIGN KEY ("userId") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

}
